{
  "projectInfo": {
    "name": "mobil-tarot-app",
    "version": "0.1.0",
    "framework": "Next.js 15.4.4",
    "language": "TypeScript",
    "database": "Supabase (Postgres)",
    "analysisDate": "2025-01-20",
    "branch": "chore/inventory-safe"
  },
  "fileStructure": {
    "totalFiles": 194,
    "totalLines": "~50,000",
    "directories": {
      "src/app": {
        "type": "Next.js App Router",
        "files": 40,
        "subdirectories": ["[locale]", "api", "maintenance"]
      },
      "src/features": {
        "type": "Feature modules",
        "files": 26,
        "subdirectories": ["tarot", "numerology", "dashboard", "shared"]
      },
      "src/lib": {
        "type": "Utilities and configs",
        "files": 45,
        "subdirectories": ["admin", "config", "constants", "i18n", "payment", "security", "supabase", "utils"]
      },
      "src/hooks": {
        "type": "Custom React hooks",
        "files": 10,
        "subdirectories": []
      },
      "src/components": {
        "type": "Reusable components",
        "files": 25,
        "subdirectories": ["admin", "dashboard", "shared"]
      },
      "src/types": {
        "type": "TypeScript definitions",
        "files": 4,
        "subdirectories": []
      }
    }
  },
  "importExportAnalysis": {
    "totalImports": 514,
    "totalExports": 613,
    "clientComponents": 88,
    "serverComponents": 0,
    "mixedComponents": 23,
    "importPatterns": {
      "external": {
        "react": 45,
        "next": 38,
        "supabase": 25,
        "tailwind": 15,
        "framer-motion": 8
      },
      "internal": {
        "@/lib": 89,
        "@/features": 67,
        "@/hooks": 34,
        "@/components": 45,
        "@/types": 28
      }
    }
  },
  "routingStructure": {
    "appRouter": {
      "localeRoutes": {
        "tr": "Turkish (default)",
        "en": "English",
        "sr": "Serbian (Latin)"
      },
      "mainRoutes": {
        "/": "Home redirect to /tarotokumasi",
        "/tarotokumasi": "Tarot reading page",
        "/numeroloji": "Numerology page",
        "/dashboard": "User dashboard",
        "/auth": "Authentication",
        "/pakize": "Admin panel",
        "/payment": "Payment flow"
      },
      "apiRoutes": {
        "/api/exchange-rate": "Currency conversion",
        "/api/geolocation": "Location detection",
        "/api/send-email": "Email service",
        "/api/webhook/shopier": "Payment webhook"
      }
    }
  },
  "dependencies": {
    "production": {
      "react": "^18.2.0",
      "next": "^15.4.4",
      "typescript": "^5",
      "@supabase/supabase-js": "^2.57.2",
      "next-intl": "^4.3.6",
      "tailwindcss": "^3.3.0",
      "react-hook-form": "^7.62.0",
      "zod": "^4.0.5",
      "framer-motion": "^12.23.0",
      "jspdf": "^3.0.2",
      "html2canvas": "^1.4.1"
    },
    "development": {
      "eslint": "^8",
      "prettier": "^3.6.0",
      "@types/react": "^18",
      "@types/node": "^20"
    }
  },
  "securityAnalysis": {
    "environmentVariables": {
      "public": [
        "NEXT_PUBLIC_SUPABASE_URL",
        "NEXT_PUBLIC_SUPABASE_ANON_KEY",
        "NEXT_PUBLIC_SITE_URL",
        "NEXT_PUBLIC_SHOPIER_API_URL",
        "NEXT_PUBLIC_CONTACT_PHONE"
      ],
      "private": ["SUPABASE_SERVICE_ROLE_KEY", "SHOPIER_SECRET_KEY", "EMAIL_PASSWORD"]
    },
    "securityFeatures": {
      "csp": "Content Security Policy active",
      "hsts": "HTTP Strict Transport Security",
      "xFrameOptions": "X-Frame-Options: DENY",
      "rateLimiting": "Development mode disabled",
      "rls": "Supabase Row Level Security active"
    }
  },
  "performanceMetrics": {
    "bundleSize": {
      "warning": "Large string serialization (108kiB)",
      "optimization": "Code splitting with dynamic imports"
    },
    "caching": {
      "api": "Response caching implemented",
      "static": "Next.js static optimization",
      "images": "Image optimization enabled"
    }
  },
  "codeQuality": {
    "typescript": {
      "errors": 235,
      "strictMode": true,
      "exactOptionalPropertyTypes": true
    },
    "linting": {
      "eslint": "500+ errors",
      "prettier": "Formatting issues",
      "unusedVariables": "Multiple files"
    },
    "testing": {
      "coverage": "Low",
      "types": ["i18n tests only"],
      "missing": ["Unit tests", "Integration tests", "E2E tests"]
    }
  },
  "buildStatus": {
    "typescript": "Failed (235 errors)",
    "linting": "Failed (500+ errors)",
    "build": "Failed (module resolution error)",
    "test": "Partial (i18n tests only)"
  },
  "riskAssessment": {
    "critical": [
      "Build failure prevents deployment",
      "TypeScript errors cause runtime issues",
      "RSC violations break server components"
    ],
    "high": [
      "Duplicate exports cause conflicts",
      "Security features disabled in development",
      "Missing error handling"
    ],
    "medium": ["Code quality issues", "Performance optimization needed", "Test coverage insufficient"]
  },
  "recommendations": {
    "immediate": ["Fix TypeScript errors", "Resolve build issues", "Clean duplicate exports", "Fix RSC violations"],
    "shortTerm": ["Enable security features", "Improve code quality", "Add unit tests", "Optimize performance"],
    "longTerm": ["Implement CI/CD", "Add monitoring", "Improve documentation", "Database optimization"]
  }
}
