/*
info:
BaÄŸlantÄ±lÄ± dosyalar:
- lucide-react: Ä°konlar iÃ§in (gerekli)
- @/hooks/useTranslations: i18n desteÄŸi iÃ§in (gerekli)

DosyanÄ±n amacÄ±:
- Dashboard sayfasÄ±nÄ±n hÄ±zlÄ± iÅŸlemler bÃ¶lÃ¼mÃ¼nÃ¼ oluÅŸturur
- KullanÄ±cÄ±nÄ±n sÄ±k kullandÄ±ÄŸÄ± sayfalara hÄ±zlÄ± eriÅŸim saÄŸlar
- Ayarlar, kredi paketleri, okuma geÃ§miÅŸi gibi Ã¶nemli linkleri iÃ§erir

GeliÅŸtirme ve Ã¶neriler:
- Responsive tasarÄ±m ve modern UI
- Hover efektleri ve transition animasyonlarÄ±
- Accessibility desteÄŸi
- Icon ve renk tutarlÄ±lÄ±ÄŸÄ±

Kodun okunabilirliÄŸi, optimizasyonu, yeniden kullanÄ±labilirliÄŸi ve gÃ¼venliÄŸi:
- Okunabilirlik: Temiz kod yapÄ±sÄ±, aÃ§Ä±k prop isimleri
- Optimizasyon: Gereksiz re-render'lar Ã¶nlenmiÅŸ
- Yeniden KullanÄ±labilirlik: ModÃ¼ler bileÅŸen yapÄ±sÄ±
- GÃ¼venlik: GÃ¼venli navigation linkleri

Gereklilik ve KullanÄ±m Durumu:
- QuickActions: Gerekli, dashboard hÄ±zlÄ± eriÅŸim menÃ¼sÃ¼ iÃ§in
- currentLocale: Gerekli, dil desteÄŸi iÃ§in
*/

'use client';

import { Settings, Coins, BookOpen, TrendingUp, History, Crown } from 'lucide-react';
import { useTranslations } from '@/hooks/useTranslations';
import { useAuth } from '@/hooks/useAuth';

interface QuickActionsProps {
  currentLocale: string;
}

export default function QuickActions({ currentLocale }: QuickActionsProps) {
  const { t: translate } = useTranslations();
  const { isAdmin } = useAuth();

  const quickActions = [
    // Admin kullanÄ±cÄ±larÄ± iÃ§in Pakize eriÅŸimi
    ...(isAdmin ? [{
      href: `/${currentLocale}/pakize`,
      icon: Crown,
      iconColor: 'text-red-400',
      bgColor: 'bg-red-500/20',
      label: 'ğŸ‘‘ Pakize Admin Panel',
      arrowColor: 'text-red-400',
    }] : []),
    {
      href: `/${currentLocale}/dashboard/settings`,
      icon: Settings,
      iconColor: 'text-success',
      bgColor: 'bg-success/20',
      label: translate('dashboard.accountSettings', 'Hesap AyarlarÄ±'),
      arrowColor: 'text-success',
    },
    {
      href: `/${currentLocale}/dashboard/packages`,
      icon: Coins,
      iconColor: 'text-gold',
      bgColor: 'bg-gold/20',
      label: translate('dashboard.creditPackages', 'Kredi Paketleri'),
      arrowColor: 'text-gold',
    },
    {
      href: `/${currentLocale}/dashboard/credits`,
      icon: History,
      iconColor: 'text-info',
      bgColor: 'bg-info/20',
      label: translate('dashboard.creditHistory', 'Kredi GeÃ§miÅŸi'),
      arrowColor: 'text-info',
    },
    {
      href: `/${currentLocale}/dashboard/readings`,
      icon: BookOpen,
      iconColor: 'text-purple',
      bgColor: 'bg-purple/20',
      label: translate('dashboard.readingHistory', 'Okuma GeÃ§miÅŸi'),
      arrowColor: 'text-purple',
    },
    {
      href: `/${currentLocale}/dashboard/statistics`,
      icon: TrendingUp,
      iconColor: 'text-warning',
      bgColor: 'bg-warning/20',
      label: translate('dashboard.statistics', 'Ä°statistikler'),
      arrowColor: 'text-warning',
    },
  ];

  return (
    <div>
      <h3 className='text-heading-3 text-gold mb-4'>
        {translate('dashboard.quickAccess', 'HÄ±zlÄ± EriÅŸim')}
      </h3>
      <div className='space-y-3'>
        {quickActions.map((action, index) => {
          const IconComponent = action.icon;

          return (
            <a
              key={index}
              href={action.href}
              className='flex items-center justify-between p-3 bg-crystal-clear rounded-lg hover:bg-crystal-clear/80 transition-colors'
            >
              <div className='flex items-center space-x-3'>
                <div className={`p-2 ${action.bgColor} rounded-lg`}>
                  <IconComponent className={`h-4 w-4 ${action.iconColor}`} />
                </div>
                <span className='text-text-celestial font-medium'>
                  {action.label}
                </span>
              </div>
              <span className={action.arrowColor}>â†’</span>
            </a>
          );
        })}
      </div>
    </div>
  );
}
