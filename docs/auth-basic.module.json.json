{
  "module": "auth-basic",
  "purpose": "Next.js 14 App Router için Supabase e-posta onaylı + Google OAuth kimlik doğrulama ve korumalı dashboard.",
  "allowed_paths": [
    "src/app/(auth)/**",
    "src/app/auth/callback/**",
    "src/app/(protected)/dashboard/page.tsx",
    "src/lib/supabase/**",
    "src/middleware.ts",
    "tests/auth/**",
    "prisma/**"
  ],
  "acceptance": [
    "Valid login redirects to /dashboard",
    "Invalid creds show inline form error",
    "Sign-up requires email confirmation and shows notice",
    "Unauthed /dashboard redirects to /sign-in"
  ],
  "env_required": [
    "NEXT_PUBLIC_SUPABASE_URL",
    "NEXT_PUBLIC_SUPABASE_ANON_KEY",
    "NEXT_PUBLIC_SITE_URL"
  ],
  "security": [
    "Do not commit secrets; .env* ignored",
    "Client'ta sadece NEXT_PUBLIC_* kullan",
    "Client/edge tarafında service_role KULLANMA",
    "RLS ON + policies with auth.uid()",
    "Redirect 'next' only to same-origin"
  ],
  "packages": {
    "runtime": [
      "@supabase/supabase-js",
      "@supabase/ssr",
      "react-hook-form",
      "zod",
      "@hookform/resolvers",
      "next-intl"
    ],
    "dev": [
      "vitest",
      "@testing-library/react",
      "@testing-library/jest-dom",
      "@playwright/test"
    ]
  ],
  "scripts": {
    "test": "vitest run",
    "test:ui": "vitest",
    "test:e2e": "playwright test"
  },
  "i18n_keys": {
    "auth.title.signIn": "Giriş Yap",
    "auth.title.signUp": "Kayıt Ol",
    "auth.label.email": "E-posta",
    "auth.label.password": "Şifre",
    "auth.action.signIn": "Giriş",
    "auth.action.signUp": "Kayıt Ol",
    "auth.action.google": "Google ile devam et",
    "auth.notice.checkEmail": "Lütfen e-posta kutunu kontrol et ve üyeliğini onayla.",
    "auth.error.invalidCredentials": "E-posta veya şifre hatalı.",
    "auth.error.required": "Bu alan zorunludur.",
    "auth.error.passwordRules": "Şifre en az 8 karakter ve en az 1 harf + 1 rakam içermelidir."
  },
  "prisma_models": {
    "Profile": {
      "table": "public.profiles",
      "fields": {
        "id": "String @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid",
        "user_id": "String @unique @db.Uuid",
        "full_name": "String? @db.VarChar(120)",
        "avatar_url": "String? @db.Text",
        "created_at": "DateTime @default(now()) @db.Timestamp(6)",
        "updated_at": "DateTime @updatedAt @db.Timestamp(6)"
      }
    }
  },
  "rls_policies": [
    "ALTER TABLE public.profiles ENABLE ROW LEVEL SECURITY;",
    "CREATE POLICY profiles_select_self ON public.profiles FOR SELECT USING (auth.uid() = user_id);",
    "CREATE POLICY profiles_insert_self ON public.profiles FOR INSERT WITH CHECK (auth.uid() = user_id);",
    "CREATE POLICY profiles_update_self ON public.profiles FOR UPDATE USING (auth.uid() = user_id);"
  ],
  "zod_schemas": {
    "SignInSchema": {
      "email": "string().email()",
      "password": "string().min(8).regex(/^(?=.*[A-Za-z])(?=.*\\d).+$/)"
    },
    "SignUpSchema": {
      "email": "string().email()",
      "password": "string().min(8).regex(/^(?=.*[A-Za-z])(?=.*\\d).+$/)"
    }
  },
  "server_actions": [
    "signInWithPassword(email, password)",
    "signUpWithEmail(email, password)",
    "signOut()"
  ],
  "oauth": {
    "provider": "google",
    "redirectTo": "${NEXT_PUBLIC_SITE_URL}/auth/callback",
    "dashboard_setup_note": "Supabase > Auth > Providers içinde Google client ID/secret ekle ve etkinleştir."
  }
}